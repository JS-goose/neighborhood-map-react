{"version":3,"sources":["images/FoursquareSocial.png","components/Map.js","components/VenueItem.js","components/SidebarList.js","components/Sidebar.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Map","react_default","a","createElement","role","id","className","VenueItem","_this","this","tabIndex","onClick","props","handleVenueClick","src","venue","categories","icon","prefix","suffix","alt","name","Component","SidebarList","_ref","venues","infowindow","content","ven","map","venueKey","components_VenueItem","key","Sidebar","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","filterVenueListings","state","query","trim","filter","venueListing","toLowerCase","includes","handleInputChange","event","setState","target","value","markers","firstMatched","marker","find","setVisible","updateSuperState","href","require","htmlFor","type","placeholder","onChange","components_SidebarList","assign","Navbar","handleButtonClick","sidebar","document","getElementById","App","obj","loadMap","url","index","window","getElementsByTagName","script","async","defer","parentNode","insertBefore","loadScript","initMap","venueListItem","concat","location","formattedAddress","setContent","open","setAnimation","google","maps","Animation","BOUNCE","InfoWindow","center","lat","lng","zoom","styles","elementType","stylers","hue","saturation","lightness","gamma","featureType","weight","position","title","Marker","animation","DROP","push","addListener","setTimeout","getVenues","axios","get","URLSearchParams","client_id","client_secret","section","near","v","then","response","data","groups","items","catch","error","console","log","alert","gm_authFailure","components_Navbar","components_Sidebar","components_Map","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ef3ff287.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/FoursquareSocial.dec86181.png\";","import React from \"react\";\r\n\r\nconst Map = () => {\r\n  return <div role=\"application\" id=\"map\" className=\"map\" />;\r\n};\r\n\r\nexport default Map;\r\n","import React, { Component } from \"react\";\r\n\r\nclass VenueItem extends Component {\r\n  render() {\r\n    return (\r\n      <li\r\n        tabIndex=\"0\"\r\n        className=\"venueItem\"\r\n        onClick={() => this.props.handleVenueClick(this.props)}\r\n      >\r\n        <img\r\n          src={\r\n            this.props.venue.venue.categories[0].icon.prefix +\r\n            \"32\" +\r\n            this.props.venue.venue.categories[0].icon.suffix\r\n          }\r\n          alt={this.props.venue.venue.categories[0].name}\r\n        />\r\n\r\n        {this.props.venue.venue.name}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VenueItem;\r\n","import React, { Component } from \"react\";\r\nimport VenueItem from \"./VenueItem\";\r\n\r\nconst SidebarList = ({ venues, handleVenueClick, infowindow, content, ven }) => {\r\n  return (\r\n    <ol id=\"venueList\">\r\n      {venues &&\r\n        venues.map((venue, venueKey) => (\r\n          <VenueItem\r\n            key={venueKey}\r\n            venue={venue}\r\n            handleVenueClick={handleVenueClick}\r\n            infowindow={infowindow}\r\n            content={content}\r\n          />\r\n        ))}\r\n    </ol>\r\n  );\r\n};\r\n\r\nexport default SidebarList;\r\n","import React, { Component } from \"react\";\r\nimport SidebarList from \"./SidebarList\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      query: \"\",\r\n    };\r\n  }\r\n\r\n  filterVenueListings = () => {\r\n    if (this.state.query.trim !== \"\") {\r\n      const venues = this.props.venues.filter((venueListing) =>\r\n        venueListing.venue.name\r\n          .toLowerCase()\r\n          .includes(this.state.query.toLowerCase())\r\n      );\r\n      return venues;\r\n    }\r\n    return this.props.venues;\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({ query: event.target.value });\r\n    const markers = this.props.venues.map((venue) => {\r\n      const firstMatched = venue.venue.name\r\n        .toLowerCase()\r\n        .includes(event.target.value.toLowerCase());\r\n      const marker = this.props.markers.find(\r\n        (marker) => marker.id === venue.venue.id\r\n      );\r\n      if (firstMatched) {\r\n        marker.setVisible(true);\r\n      } else {\r\n        marker.setVisible(false);\r\n      }\r\n      return marker;\r\n    });\r\n    this.props.updateSuperState({ markers: markers });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <aside id=\"sidebarContainer\">\r\n        <h1 id=\"sidebarHeader\">\r\n          Powered by\r\n          <a href=\"https://www.foursquare.com\" target=\"blank\">\r\n            {/* Image provided by FourSquare https://www.dropbox.com/sh/webqiiog37nr3n9/AACUMJz5FsCCOVsuzYz2ovI6a/App%20Icons/Foursquare%20City%20Guide?dl=0&preview=Foursquare+Social.png&subfolder_nav_tracking=1*/}\r\n            <img\r\n              id=\"fourLogo\"\r\n              src={require(\"../images/FoursquareSocial.png\")}\r\n              alt=\"the foursquare logo\"\r\n            />\r\n          </a>\r\n        </h1>\r\n        <label htmlFor=\"filter\">Search Venue Listings</label>\r\n        <input\r\n          id=\"filter\"\r\n          type=\"search\"\r\n          placeholder=\"ex. Six Flags\"\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <SidebarList\r\n          {...this.props}\r\n          handleVenueClick={this.props.handleVenueClick}\r\n          venues={this.filterVenueListings()}\r\n        />\r\n      </aside>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Navbar extends Component {\r\n  handleButtonClick = () => {\r\n    let sidebar = document.getElementById(\"sidebarContainer\");\r\n    let map = document.getElementById(\"map\");\r\n    if (sidebar.className !== \"hidden\") {\r\n      sidebar.className = \"hidden\";\r\n      map.className = \"wideMap\";\r\n    } else {\r\n      sidebar.className = null;\r\n      map.className = \"map\";\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <nav id=\"nav\">\r\n        <div id=\"navbar\">\r\n          <button id=\"menu\" onClick={this.handleButtonClick}>\r\n            Menu\r\n          </button>\r\n        </div>\r\n        <h1 id=\"navbarHeader\">San Antonio Parks</h1>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Map from \"./components/Map\";\r\nimport axios from \"axios\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport { timingSafeEqual } from \"crypto\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    venues: [],\r\n    markers: [],\r\n    updateSuperState: (obj) => {\r\n      this.setState(obj);\r\n    },\r\n  };\r\n\r\n  //* This is a lifecycle event that fires after the component is loaded into the DOM and renders the map\r\n  componentDidMount() {\r\n    this.getVenues();\r\n\r\n    // * This will fire and display a message if there are any problems loading the Google Maps API. \r\n    // * Used under advisement from project review at https://www.udacity.com\r\n    window.gm_authFailure = () =>\r\n      alert(\r\n        \"Google Maps has encountered an error. Please check the console for more information\"\r\n      );\r\n  }\r\n\r\n  //* This function loads the map\r\n  loadMap = () => {\r\n    loadScript(\r\n      `https://maps.googleapis.com/maps/api/js?key=AIzaSyCeg7QO_VyQ3FWMQexN8WPLJvGSDXOynuc&callback=initMap`\r\n    );\r\n    window.initMap = this.initMap;\r\n  };\r\n\r\n  handleVenueClick = (venueListItem) => {\r\n    const marker = this.state.markers;\r\n    let content = `\r\n      <div class=\"infowindow\">\r\n      <h1 class = \"infoHeader\">\r\n        ${venueListItem.venue.venue.name}\r\n      </h1>\r\n      <p>\r\n        ${venueListItem.venue.venue.location.formattedAddress[0]}\r\n      </p>\r\n      <p>\r\n        ${venueListItem.venue.venue.location.formattedAddress[1]}\r\n      </p>\r\n      <p>\r\n        <a href='https://foursquare.com/v/${\r\n          venueListItem.venue.venue.id\r\n        }' target=\"blank\">More Info</a>\r\n        </p>\r\n      </div>`;\r\n    marker.filter((marker) => {\r\n      if (marker.id === venueListItem.venue.venue.id) {\r\n        this.state.infowindow.setContent(content);\r\n        this.state.infowindow.open(this.initMap, marker);\r\n        marker.setAnimation(window.google.maps.Animation.BOUNCE);\r\n      } else {\r\n        marker.setAnimation(null);\r\n      }\r\n    });\r\n  };\r\n\r\n  //* This function initalizes the map\r\n  initMap = () => {\r\n    //* Creates a new info window instance to use on markers and then sets it to state\r\n    let infowindow = new window.google.maps.InfoWindow();\r\n    this.setState({ infowindow: infowindow });\r\n\r\n    const map = new window.google.maps.Map(document.getElementById(\"map\"), {\r\n      center: { lat: 29.424122, lng: -98.493628 },\r\n      zoom: 11,\r\n      styles: [\r\n        {\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              hue: \"#ff4400\",\r\n            },\r\n            {\r\n              saturation: -68,\r\n            },\r\n            {\r\n              lightness: -4,\r\n            },\r\n            {\r\n              gamma: 0.72,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"road\",\r\n          elementType: \"labels.icon\",\r\n        },\r\n        {\r\n          featureType: \"landscape.man_made\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              hue: \"#0077ff\",\r\n            },\r\n            {\r\n              gamma: 3.1,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"water\",\r\n          stylers: [\r\n            {\r\n              hue: \"#00ccff\",\r\n            },\r\n            {\r\n              gamma: 0.44,\r\n            },\r\n            {\r\n              saturation: -33,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"poi.park\",\r\n          stylers: [\r\n            {\r\n              hue: \"#44ff00\",\r\n            },\r\n            {\r\n              saturation: -23,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"water\",\r\n          elementType: \"labels.text.fill\",\r\n          stylers: [\r\n            {\r\n              hue: \"#007fff\",\r\n            },\r\n            {\r\n              gamma: 0.77,\r\n            },\r\n            {\r\n              saturation: 65,\r\n            },\r\n            {\r\n              lightness: 99,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"water\",\r\n          elementType: \"labels.text.stroke\",\r\n          stylers: [\r\n            {\r\n              gamma: 0.11,\r\n            },\r\n            {\r\n              weight: 5.6,\r\n            },\r\n            {\r\n              saturation: 99,\r\n            },\r\n            {\r\n              hue: \"#0091ff\",\r\n            },\r\n            {\r\n              lightness: -86,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"transit.line\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              lightness: -48,\r\n            },\r\n            {\r\n              hue: \"#ff5e00\",\r\n            },\r\n            {\r\n              gamma: 1.2,\r\n            },\r\n            {\r\n              saturation: -23,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          featureType: \"transit\",\r\n          elementType: \"labels.text.stroke\",\r\n          stylers: [\r\n            {\r\n              saturation: -64,\r\n            },\r\n            {\r\n              hue: \"#ff9100\",\r\n            },\r\n            {\r\n              lightness: 16,\r\n            },\r\n            {\r\n              gamma: 0.47,\r\n            },\r\n            {\r\n              weight: 2.7,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    });\r\n\r\n    //* Loops over all venue items and dynamically creates markers for them\r\n    this.state.venues.map((index) => {\r\n      let position = {\r\n        lat: index.venue.location.lat,\r\n        lng: index.venue.location.lng,\r\n      };\r\n      let title = index.venue.name;\r\n      let marker = new window.google.maps.Marker({\r\n        map: map,\r\n        position: position,\r\n        title: title,\r\n        animation: window.google.maps.Animation.DROP,\r\n        id: index.venue.id,\r\n        icon: \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\r\n      });\r\n\r\n      // * Pushes markers to state after they have been created`\r\n      this.setState(() => this.state.markers.push(marker));\r\n\r\n      // *This is the information displayed in the infowindow upon clicking a marker\r\n      let content = `\r\n        <div class=\"infowindow\">\r\n        <h1 class = \"infoHeader\">\r\n          ${index.venue.name}\r\n        </h1>\r\n        <p>\r\n          ${index.venue.location.formattedAddress[0]}\r\n        </p>\r\n        <p>\r\n          ${index.venue.location.formattedAddress[1]}\r\n        </p>\r\n        <p>\r\n        <a href=\"https://foursquare.com/v/${\r\n          index.venue.id\r\n        }\" target=\"blank\">More Info</a>\r\n        </p>\r\n        </div>`;\r\n\r\n      // * Adds click event listener to markers\r\n      marker.addListener(\"click\", () => {\r\n        // * Resets info window content when marker is clicked\r\n        this.setState({ content: content });\r\n        // * Sets info window content based on state\r\n        this.state.infowindow.setContent(this.state.content);\r\n        // * Opens info window on marker when clicked\r\n        this.state.infowindow.open(map, marker);\r\n        // * Markers bounce once when clicked\r\n        if (marker.title === index.venue.name) {\r\n          marker.setAnimation(window.google.maps.Animation.BOUNCE);\r\n        }\r\n        window.setTimeout(() => {\r\n          marker.setAnimation(null);\r\n        }, 3000);\r\n      });\r\n    });\r\n  };\r\n\r\n  //* This function provides search parameters to Foursquare to match against queries\r\n  getVenues = () => {\r\n    const endpoint = \"https://api.foursquare.com/v2/venues/explore?\";\r\n    const parameters = {\r\n      client_id: \"SHKPWDT0OVUNMDM400IYZ45CV0CWBKIPDHLD3QMTLYFMMNH4\",\r\n      client_secret: \"ZOT1OGISO2HZG0WVP4B5N50XR04SDA3Y2Y4GMLAKEA0LGLVY\",\r\n      query: \"parks\",\r\n      section: \"\",\r\n      near: \"San Antonio\",\r\n      v: \"20181008\",\r\n    };\r\n\r\n    //* Here we request data using Axios https://github.com/axios/axios\r\n    axios\r\n      .get(endpoint + new URLSearchParams(parameters))\r\n      .then((response) => {\r\n        //* Setting state for venues\r\n        this.setState(\r\n          {\r\n            venues: response.data.response.groups[0].items,\r\n          },\r\n          this.loadMap()\r\n        ); //*the loadMap call was added here to load once the venues has been populated.\r\n        //*If this call were to be in componentDidMount our loop would have no info to loop over\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Error in Axios get: ${error}`);\r\n        alert('There has been an error loading venue data. Please check the console for more information.');\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <main id=\"main\">\r\n          {/* <Hamburger /> */}\r\n          <Sidebar {...this.state} handleVenueClick={this.handleVenueClick} />\r\n          <Map {...this.state} />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// *This function creates a useable script so we can insert Google Maps without using any 3rd party loaders\r\n// *and was used with permission from Elharony at this link\r\n// *https://www.youtube.com/watch?v=W5LhLZqj76s&index=2&list=PLBDR9JgF-I5Qz6A2TjO2bslaltdxwWy8i\r\nfunction loadScript(url) {\r\n  let index = window.document.getElementsByTagName(\"script\")[0];\r\n  let script = window.document.createElement(\"script\");\r\n  script.src = url;\r\n  script.async = true;\r\n  script.defer = true;\r\n  index.parentNode.insertBefore(script, index);\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}